

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                                           Thu Oct 28 00:01:15 2021


     1                           	processor	18F4520
     2                           	pagewidth 132
     3                           	opt	flic
     4                           	psect	udata_acs,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     5                           	psect	udata_bank0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     6                           	psect	udata_bank1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     7                           	psect	udata_bank2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     8                           	psect	udata_bank3,global,class=BANK3,space=1,delta=1,lowdata,noexec
     9                           	psect	udata_bank4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    10                           	psect	udata_bank5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    11                           	psect	udata,global,class=RAM,space=1,delta=1,noexec
    12                           	psect	code,global,reloc=2,class=CODE,delta=1
    13                           	psect	data,global,reloc=2,class=CONST,delta=1,noexec
    14                           	psect	edata,global,class=EEDATA,space=3,delta=2,noexec
    15                           	psect	mytext,local,reloc=2,class=CODE,delta=1
    16  0000                     
    17                           	psect	edata
    18  0000                     stk_offset	set	0
    19  0000                     auto_size	set	0
    20                           
    21                           ; stack_auto defines a symbol /name/_offset which equates to the
    22                           ; stack offset of the auto object in question
    23  000000                     
    24                           ; stack_param defines a symbol /name/_offset which equates to the
    25                           ; stack offset of the parameter object in question
    26  000000                     
    27                           ; alloc_stack adjusts the SP to allocate space for auto objects
    28                           ; it also links in to the btemp symbol so that can be used
    29  000000                     
    30                           ; restore_stack adjusts the SP to remove all auto and parameter
    31                           ; objects from the stack prior to returning from a function
    32  000000                     
    33                           	psect	mytext
    34  007FA0                     _divide:
    35                           	callstack 0
    36  007FA0  0E08               	movlw	8
    37  007FA2  6E92               	movwf	3986,c	; loop
    38  007FA4  C001 FF95          	movff	1,3989	; dividend
    39  007FA8  C003 FF94          	movff	3,3988	; divisor
    40  007FAC  6A93               	clrf	3987,c
    41                           
    42                           ;remainder = TRISB:TRISD
    43  007FAE  6AE8               	clrf	wreg,c
    44                           
    45                           ;step 1 need modify
    46  007FB0  AE95               	btfss	3989,7,c
    47  007FB2  D002               	goto	SET0_INITIAL
    48  007FB4  8093               	bsf	3987,0,c
    49  007FB6  D003               	goto	ROTATE_INITIAL
    50  007FB8                     SET0_INITIAL:
    51  007FB8  9093               	bcf	3987,0,c
    52  007FBA  9E93               	bcf	3987,7,c
    53  007FBC  4693               	rlncf	3987,f,c
    54  007FBE                     ROTATE_INITIAL:
    55  007FBE  9E95               	bcf	3989,7,c
    56  007FC0  4695               	rlncf	3989,f,c
    57  007FC2  8095               	bsf	3989,0,c
    58  007FC4                     LOOP:
    59                           
    60                           ;step2
    61  007FC4  CF94 FFE8          	movff	3988,wreg
    62  007FC8  5C93               	subwf	3987,w,c
    63                           
    64                           ;test remainder
    65  007FCA  E60C               	bmi	REMAINDER_SMALL
    66                           
    67                           ; remainder >= 0
    68  007FCC  6E93               	movwf	3987,c
    69  007FCE  9E93               	bcf	3987,7,c
    70  007FD0  4693               	rlncf	3987,f,c
    71  007FD2  AE95               	btfss	3989,7,c
    72  007FD4  D002               	goto	SET0_BIG
    73  007FD6  8093               	bsf	3987,0,c
    74  007FD8  D001               	goto	ROTATE_BIG
    75  007FDA                     SET0_BIG:
    76  007FDA  9093               	bcf	3987,0,c
    77  007FDC                     ROTATE_BIG:
    78  007FDC  9E95               	bcf	3989,7,c
    79  007FDE  4695               	rlncf	3989,f,c
    80  007FE0  8095               	bsf	3989,0,c
    81  007FE2  D005               	goto	L1
    82  007FE4                     REMAINDER_SMALL:
    83                           
    84                           ;remainder < 0
    85  007FE4  9E93               	bcf	3987,7,c
    86  007FE6  4693               	rlncf	3987,f,c
    87  007FE8  8093               	bsf	3987,0,c
    88  007FEA  4695               	rlncf	3989,f,c
    89  007FEC  9095               	bcf	3989,0,c
    90  007FEE                     L1:
    91  007FEE  2E92               	decfsz	3986,f,c
    92  007FF0  D7E9               	goto	LOOP
    93  007FF2  9093               	bcf	3987,0,c
    94  007FF4  4293               	rrncf	3987,f,c
    95  007FF6  CF93 F001          	movff	3987,1
    96  007FFA  CF95 F002          	movff	3989,2
    97  007FFE  0012               	return	
    98                           tosu	equ	0xFFF
    99                           tosh	equ	0xFFE
   100                           tosl	equ	0xFFD
   101                           stkptr	equ	0xFFC
   102                           pclatu	equ	0xFFB
   103                           pclath	equ	0xFFA
   104                           pcl	equ	0xFF9
   105                           tblptru	equ	0xFF8
   106                           tblptrh	equ	0xFF7
   107                           tblptrl	equ	0xFF6
   108                           tablat	equ	0xFF5
   109                           prodh	equ	0xFF4
   110                           prodl	equ	0xFF3
   111                           indf0	equ	0xFEF
   112                           postinc0	equ	0xFEE
   113                           postdec0	equ	0xFED
   114                           preinc0	equ	0xFEC
   115                           plusw0	equ	0xFEB
   116                           fsr0h	equ	0xFEA
   117                           fsr0l	equ	0xFE9
   118                           wreg	equ	0xFE8
   119                           indf1	equ	0xFE7
   120                           postinc1	equ	0xFE6
   121                           postdec1	equ	0xFE5
   122                           preinc1	equ	0xFE4
   123                           plusw1	equ	0xFE3
   124                           fsr1h	equ	0xFE2
   125                           fsr1l	equ	0xFE1
   126                           bsr	equ	0xFE0
   127                           indf2	equ	0xFDF
   128                           postinc2	equ	0xFDE
   129                           postdec2	equ	0xFDD
   130                           preinc2	equ	0xFDC
   131                           plusw2	equ	0xFDB
   132                           fsr2h	equ	0xFDA
   133                           fsr2l	equ	0xFD9
   134                           status	equ	0xFD8


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                               Thu Oct 28 00:01:15 2021

                        LOOP 7FC4                          WREG 000FE8                         TRISA 000F92  
                       TRISB 000F93                         TRISC 000F94                         TRISD 000F95  
                     _divide 7FA0                       isa$std 000001                  SET0_INITIAL 7FB8  
                    SET0_BIG 7FDA                    ROTATE_BIG 7FDC               REMAINDER_SMALL 7FE4  
              ROTATE_INITIAL 7FBE                     isa$xinst 000000  
